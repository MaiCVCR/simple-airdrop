{
  "address": "0x3a4eC7ff6c7508e9F0747723FCb9908d9cad532a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_airdropAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "airdropAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasAddressClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbbe8ea8d5e0ff8d081ffba7f1aca8110509d7c56735c55fd15b6b42957a75253",
  "receipt": {
    "to": null,
    "from": "0x47a7a4d0b6b2b61192c38Dd1019EcC1aC053048e",
    "contractAddress": "0x3a4eC7ff6c7508e9F0747723FCb9908d9cad532a",
    "transactionIndex": 15,
    "gasUsed": "453446",
    "logsBloom": "0x
    "blockHash": "0x07ed40c241be368c7fb31ffb39b5ee3a4f189ba4187fc75d0f8eba3fa1af6f72",
    "transactionHash": "0xbbe8ea8d5e0ff8d081ffba7f1aca8110509d7c56735c55fd15b6b42957a75253",
    "logs": [],
    "blockNumber": 20736731,
    "cumulativeGasUsed": "2281724",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9E3Fad1D2F19384fd1208E63d9B52d54dCd7c6b5",
    "100000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "908b03161cff5984c53ea3030c10bfd4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_airdropAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasAddressClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Airdrop.sol\":\"Airdrop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/Airdrop.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Airdrop {\\n    IERC20 public token;\\n    uint256 public airdropAmount;\\n    address public owner;\\n    \\n    // Mapping to track if address has claimed tokens\\n    mapping(address => bool) public hasClaimed;\\n    \\n    // Event emitted when tokens are claimed\\n    event TokensClaimed(address indexed claimant, uint256 amount);\\n    \\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Not owner\\\");\\n        _;\\n    }\\n    \\n    constructor(\\n        address _token,\\n        uint256 _airdropAmount\\n    ) {\\n        token = IERC20(_token);\\n        airdropAmount = _airdropAmount;\\n        owner = msg.sender;\\n    }\\n    \\n    function claimTokens() external {\\n        require(!hasClaimed[msg.sender], \\\"Already claimed tokens\\\");\\n        require(\\n            token.balanceOf(address(this)) >= airdropAmount,\\n            \\\"Insufficient tokens in contract\\\"\\n        );\\n        \\n        hasClaimed[msg.sender] = true;\\n        \\n        require(\\n            token.transfer(msg.sender, airdropAmount),\\n            \\\"Token transfer failed\\\"\\n        );\\n        \\n        emit TokensClaimed(msg.sender, airdropAmount);\\n    }\\n    \\n    function withdrawTokens(uint256 amount) external onlyOwner {\\n        require(\\n            token.balanceOf(address(this)) >= amount,\\n            \\\"Insufficient tokens in contract\\\"\\n        );\\n        require(\\n            token.transfer(owner, amount),\\n            \\\"Token transfer failed\\\"\\n        );\\n    }\\n    \\n    function hasAddressClaimed(address _address) external view returns (bool) {\\n        return hasClaimed[_address];\\n    }\\n}\",\"keccak256\":\"0xa0da8840cc4c6f41f10a8a66ad034cfd119064185a0d295a2dbf46690d496916\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106a53803806106a583398101604081905261002f91610060565b600080546001600160a01b039093166001600160a01b0319938416179055600155600280549091163317905561009a565b6000806040838503121561007357600080fd5b82516001600160a01b038116811461008a57600080fd5b6020939093015192949293505050565b6105fc806100a96000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063832e3f881161005b578063832e3f88146100d75780638da5cb5b14610103578063fc0c546a1461012e578063fc2ea8a51461014157600080fd5b8063315a095d1461008257806348c54b9d1461009757806373b2e80e1461009f575b600080fd5b610095610090366004610542565b610158565b005b61009561031d565b6100c26100ad36600461055b565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100c26100e536600461055b565b6001600160a01b031660009081526003602052604090205460ff1690565b600254610116906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b600054610116906001600160a01b031681565b61014a60015481565b6040519081526020016100ce565b6002546001600160a01b031633146101a35760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6000546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020f919061058b565b101561025d5760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e7420746f6b656e7320696e20636f6e747261637400604482015260640161019a565b60005460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af11580156102b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d691906105a4565b61031a5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161019a565b50565b3360009081526003602052604090205460ff16156103765760405162461bcd60e51b8152602060048201526016602482015275416c726561647920636c61696d656420746f6b656e7360501b604482015260640161019a565b6001546000546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e5919061058b565b10156104335760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e7420746f6b656e7320696e20636f6e747261637400604482015260640161019a565b33600081815260036020526040808220805460ff1916600190811790915591549154905163a9059cbb60e01b8152600481019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c491906105a4565b6105085760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161019a565b60015460405190815233907f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4309060200160405180910390a2565b60006020828403121561055457600080fd5b5035919050565b60006020828403121561056d57600080fd5b81356001600160a01b038116811461058457600080fd5b9392505050565b60006020828403121561059d57600080fd5b5051919050565b6000602082840312156105b657600080fd5b8151801515811461058457600080fdfea2646970667358221220709330fc78a73a6eb5b216befb432f54e51d8aa5d7e1f19e27dc0b53166243f364736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063832e3f881161005b578063832e3f88146100d75780638da5cb5b14610103578063fc0c546a1461012e578063fc2ea8a51461014157600080fd5b8063315a095d1461008257806348c54b9d1461009757806373b2e80e1461009f575b600080fd5b610095610090366004610542565b610158565b005b61009561031d565b6100c26100ad36600461055b565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100c26100e536600461055b565b6001600160a01b031660009081526003602052604090205460ff1690565b600254610116906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b600054610116906001600160a01b031681565b61014a60015481565b6040519081526020016100ce565b6002546001600160a01b031633146101a35760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6000546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020f919061058b565b101561025d5760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e7420746f6b656e7320696e20636f6e747261637400604482015260640161019a565b60005460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af11580156102b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d691906105a4565b61031a5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161019a565b50565b3360009081526003602052604090205460ff16156103765760405162461bcd60e51b8152602060048201526016602482015275416c726561647920636c61696d656420746f6b656e7360501b604482015260640161019a565b6001546000546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e5919061058b565b10156104335760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e7420746f6b656e7320696e20636f6e747261637400604482015260640161019a565b33600081815260036020526040808220805460ff1916600190811790915591549154905163a9059cbb60e01b8152600481019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c491906105a4565b6105085760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161019a565b60015460405190815233907f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4309060200160405180910390a2565b60006020828403121561055457600080fd5b5035919050565b60006020828403121561056d57600080fd5b81356001600160a01b038116811461058457600080fd5b9392505050565b60006020828403121561059d57600080fd5b5051919050565b6000602082840312156105b657600080fd5b8151801515811461058457600080fdfea2646970667358221220709330fc78a73a6eb5b216befb432f54e51d8aa5d7e1f19e27dc0b53166243f364736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 791,
        "contract": "contracts/Airdrop.sol:Airdrop",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)729"
      },
      {
        "astId": 793,
        "contract": "contracts/Airdrop.sol:Airdrop",
        "label": "airdropAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 795,
        "contract": "contracts/Airdrop.sol:Airdrop",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 799,
        "contract": "contracts/Airdrop.sol:Airdrop",
        "label": "hasClaimed",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)729": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}